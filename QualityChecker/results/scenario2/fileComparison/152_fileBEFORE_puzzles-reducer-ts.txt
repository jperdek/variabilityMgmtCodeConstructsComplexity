// FROM: E:/aspects/canvasSPLforSPA/canvasSPLforSPA/src/app/store/puzzles/puzzles-reducer-ts
import { createReducer, on } from "@ngrx/store";
import { EntityState, EntityAdapter, createEntityAdapter } from "@ngrx/entity";
import * as puzzleActions from "./puzzles.actions";
import { Puzzle } from "./puzzles";
import { DecoratorTypesService } from "src/app/featureManagement/decoratorsVariationPointManagement/decorator-types.service";
export const puzzlesFeatureKey = "puzzles";
export interface PuzzleToSelectState extends EntityState<Puzzle> {
}
export const adapter: EntityAdapter<Puzzle> = createEntityAdapter<Puzzle>();
export const initialState: PuzzleToSelectState = adapter.getInitialState({});
export const reducer = createReducer(initialState, on(puzzleActions.loadPuzzles, (state, action) => adapter.setAll(action.puzzles, state)), on(puzzleActions.addPuzzle, (state, action) => adapter.upsertOne(action.puzzle, state)), on(puzzleActions.returnPuzzle, (state, action) => adapter.removeOne(action.id, state)), on(puzzleActions.returnGivenPuzzles, (state, action) => adapter.removeMany(action.ids, state)), on(puzzleActions.returnPuzzles, (state, action) => adapter.removeAll(state)), on(puzzleActions.addPuzzles, (state, action) => adapter.upsertMany(action.puzzles, state)));
export const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();
var EXPRESSION_START57 = {};
var EXPRESSION_END57 = { "EXPRESSION_END": "---------------------------" };
